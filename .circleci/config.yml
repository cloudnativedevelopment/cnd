version: 2.1
orbs:
  aws-s3: circleci/aws-s3@1.0.6
jobs:
  build:
    docker:
      - image: circleci/golang:1.13
    steps:
      - checkout
      - restore_cache: 
          keys:
            - v2-pkg-cache
      - run: make test
      - run: env VERSION_STRING=$CIRCLE_TAG make -j 3 build-all
      - run: env VERSION_STRING=$CIRCLE_TAG make latest
      - persist_to_workspace:
          root: .
          paths:
            - bin
      - save_cache:
          key: v2-pkg-cache
          paths:
            - ~/.cache/go-build
      - store_artifacts:
          path: bin
          destination: binaries
  integration:
    docker:
      - image: okteto/desk:latest
    steps:
      - checkout
      - restore_cache: 
          keys:
            - v2-pkg-cache
      - attach_workspace:
          at: ./artifacts
      - run: 
          name: integration tests
          command: |
            export OKTETO_USER=cindylopez
            export OKTETO_PATH=$(pwd)/artifacts/bin/okteto-Linux-x86_64
            export OKTETO_CLIENTSIDE_TRANSLATION=true
            mkdir -p $HOME/.okteto
            touch $HOME/.okteto/.noanalytics
            echo $HOME
            make integration
      - save_cache:
          key: v2-pkg-cache
          paths:
            - ~/.cache/go-build
      - store_artifacts:
          path: /root/.okteto/okteto.log
          
  mock-publish-github-release:
    docker:
      - image: circleci/golang:1.13
    steps:
      - checkout
      - attach_workspace:
          at: ./artifacts
      - deploy:
          name: "Update brew formula"
          command: |
            sha=$(cat ./artifacts/bin/okteto-Darwin-x86_64.sha256 | awk '{print $1}')
            bash ./update_homebrew_formula.sh 0.0.1 $GITHUB_TOKEN $sha 1

  release:
    docker:
      - image: circleci/golang:1.13
    steps:
      - checkout
      - attach_workspace:
          at: ./artifacts
      - aws-s3/sync:
          from: ./artifacts/bin
          to: "s3://downloads.okteto.com/cli"
          aws-access-key-id: AWS_ACCESS_KEY_ID
          aws-secret-access-key: AWS_SECRET_ACCESS_KEY
          aws-region: AWS_REGION
          arguments: |
            --acl public-read \
            --metadata version=${CIRCLE_TAG} \
            --cache-control "max-age=86400" \
            --exclude "*.*.*/" \
      - aws-s3/sync:
          from: ./artifacts/bin
          to: "s3://downloads.okteto.com/cli/${CIRCLE_TAG}"
          aws-access-key-id: AWS_ACCESS_KEY_ID
          aws-secret-access-key: AWS_SECRET_ACCESS_KEY
          aws-region: AWS_REGION
          arguments: |
            --acl public-read \
            --metadata version=${CIRCLE_TAG} \
            --cache-control "max-age=86400" \
          overwrite: false
      - aws-s3/copy:
          from: "./artifacts/bin/okteto-Darwin-x86_64"
          to: "s3://downloads.okteto.com/cloud/cli/okteto-Darwin-x86_64"
          aws-access-key-id: AWS_ACCESS_KEY_ID
          aws-secret-access-key: AWS_SECRET_ACCESS_KEY
          aws-region: AWS_REGION
          arguments: |
            --acl public-read \
            --metadata version=${CIRCLE_TAG} \
            --cache-control "max-age=86400"
      - aws-s3/copy:
          from: "./artifacts/bin/okteto-Darwin-x86_64"
          to: "s3://downloads.okteto.com/cli/okteto-darwin-amd64"
          aws-access-key-id: AWS_ACCESS_KEY_ID
          aws-secret-access-key: AWS_SECRET_ACCESS_KEY
          aws-region: AWS_REGION
          arguments: |
            --acl public-read \
            --metadata version=${CIRCLE_TAG} \
            --cache-control "max-age=86400"
      - run:
          name: "Publish Release on GitHub"
          command: |
            go get -u github.com/tcnksm/ghr
            ghr -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} -token $GITHUB_TOKEN -replace $CIRCLE_TAG  ./artifacts/bin/
      - deploy:
          name: "Update brew formula"
          command: |
            sha=$(cat ./artifacts/bin/okteto-Darwin-x86_64.sha256 | awk '{print $1}')
            bash ./update_homebrew_formula.sh $CIRCLE_TAG $GITHUB_TOKEN $sha 0
  release-master:
    docker:
      - image: circleci/golang:1.12
    steps:
      - checkout
      - attach_workspace:
          at: ./artifacts
      - aws-s3/sync:
          from: ./artifacts/bin
          to: "s3://downloads.okteto.com/cli/master"
          aws-access-key-id: AWS_ACCESS_KEY_ID
          aws-secret-access-key: AWS_SECRET_ACCESS_KEY
          aws-region: AWS_REGION
          arguments: |
            --acl public-read \
            --metadata version=${CIRCLE_SHA1}
workflows:
  version: 2
  build-release:
    jobs:
      - build:
          filters:
            tags:
              only: /.*/
      - integration:
          requires:
            - build
          filters:
            branches:
              only: 
                - master
      - release-master:
          requires:
            - integration
          filters:
            branches:
              only: master
      - mock-publish-github-release:
          requires:
            - build
          filters:
            tags:
              only: /.*/
      - release:
          requires:
            - build
          filters:
            tags:
              only: /^\d+\.\d+\.\d+$/
            branches:
              ignore: /.*/
      
